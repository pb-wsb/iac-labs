name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Poetry (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Poetry (Windows)
        if: runner.os == 'Windows'
        run: |
          (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -
          echo "$env:APPDATA\Python\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
      - name: Install Dependencies
        working-directory: ./example-app
        run: poetry install --no-root

  static_tests:
    needs: setup
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        
    defaults:
      run:
        shell: bash
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Install Dependencies
        working-directory: ./example-app
        run: poetry install --no-root
        
      - name: Run Linting
        working-directory: ./example-app
        run: poetry run task lint
        
      - name: Run Formatting
        working-directory: ./example-app
        run: poetry run task formatter
        
      - name: Run Security Checks
        working-directory: ./example-app
        run: poetry run task security

  unit_tests:
    needs: static_tests
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        
    defaults:
      run:
        shell: bash
        
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Install Dependencies
        working-directory: ./example-app
        run: poetry install --no-root
        
      - name: Run Unit Tests
        working-directory: ./example-app
        run: poetry run task test
