name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Install Dependencies
        working-directory: ./example-app
        run: poetry install --no-root
  
  static_tests:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test_type: ['lint', 'formatter', 'security']
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Install Dependencies
        working-directory: ./example-app
        run: poetry install --no-root
        
      - name: Run ${{ matrix.test_type }}
        working-directory: ./example-app
        run: poetry run task ${{ matrix.test_type }}
  
  unit_tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Install Dependencies
        working-directory: ./example-app
        run: poetry install --no-root
        
      - name: Run Unit Tests
        working-directory: ./example-app
        run: poetry run task test
  
  test_summary:
    needs: [static_tests, unit_tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Test Summary
        run: |
          if [[ "${{ needs.static_tests.result }}" == "success" ]] && 
             [[ "${{ needs.unit_tests.result }}" == "success" ]]; then
            echo "All tests passed successfully!"
            exit 0
          else
            echo "Some tests failed"
            exit 1
          fi
