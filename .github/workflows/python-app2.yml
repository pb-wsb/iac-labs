name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: build-group
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('example-app/poetry.lock') }}

      - name: Install Poetry
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        working-directory: ./example-app
        run: poetry install --no-root

  lint:
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: lint-group
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('example-app/poetry.lock') }}

      - name: Run Linter
        working-directory: ./example-app
        run: poetry run task lint

  formatter:
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: formatter-group
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('example-app/poetry.lock') }}

      - name: Check Formatting
        working-directory: ./example-app
        run: poetry run task format-check

  security:
    runs-on: ubuntu-latest
    needs: build
    concurrency:
      group: security-group
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('example-app/poetry.lock') }}

      - name: Run Security Tests
        working-directory: ./example-app
        run: poetry run task security

  unittests:
    runs-on: ubuntu-latest
    needs: [lint, formatter, security]
    concurrency:
      group: unittests-group
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache Poetry dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('example-app/poetry.lock') }}

      - name: Run Unit Tests
        working-directory: ./example-app
        run: poetry run task test
